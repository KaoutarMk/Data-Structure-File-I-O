package main;
import java.io.*;

public class MultipleRecursiveOddonacci {
	public static int multipleOddonacci(int n, int[] memo) {
        if (memo[n] != 0)
            return memo[n];
        if (n <= 3)
            return 1;
        else {
            memo[n] = multipleOddonacci(n-1, memo) + multipleOddonacci(n-2, memo) + multipleOddonacci(n-3, memo);
            return memo[n];
        }
    }

    public static void main(String[] args) {
        PrintWriter out = null;
        try {
            out = new PrintWriter("OddoOutMultiple.txt");
            for (int i = 5; i <= 200; i += 5) { // Reduced upper limit due to exponential growth
                long startTime = System.nanoTime();
                int result = multipleOddonacci(i, new int[i+1]);
                long endTime = System.nanoTime();
                long duration = endTime - startTime;
                out.println("Oddonacci(" + i + ") = " + result + ", Time: " + duration + " ns");
                System.out.println("Oddonacci(" + i + ") = " + result + ", Time: " + duration + " ns");
            }
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            if (out != null) {
                out.close();
            }
        }
    }

}


